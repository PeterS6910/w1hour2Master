<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_bObtainDatabases.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>