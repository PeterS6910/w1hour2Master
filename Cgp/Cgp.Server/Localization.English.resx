<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CISIntegration" xml:space="preserve">
    <value>Enable CIS integration</value>
  </data>
  <data name="ConnectionCount" xml:space="preserve">
    <value>Maximum number of connected clients</value>
  </data>
  <data name="DCUText" xml:space="preserve">
    <value>DCU</value>
  </data>
  <data name="DoorEnvironmentForDCUName" xml:space="preserve">
    <value>Door environment DCU</value>
  </data>
  <data name="DoorEnvironmentName" xml:space="preserve">
    <value>Door environment</value>
  </data>
  <data name="Edition" xml:space="preserve">
    <value>Edition</value>
  </data>
  <data name="ErrorEmptyValue" xml:space="preserve">
    <value>Value can not be empty</value>
  </data>
  <data name="ErrorOnCreateRequest" xml:space="preserve">
    <value>An error occured while creating a request</value>
  </data>
  <data name="ErrorOnCreateRequestCIID" xml:space="preserve">
    <value>An error occured while creating a request (could not get CIID)</value>
  </data>
  <data name="ErrorOnLicenceProperty" xml:space="preserve">
    <value>Licence property set failed (check descriptive set file)</value>
  </data>
  <data name="ErrorReadLicencePublisherAndProperties" xml:space="preserve">
    <value>Could not load required licence information (certificate, properties).
(*.crt and *.ldsc file must be present)</value>
  </data>
  <data name="FormLicenceRequestFormLicenceRequest" xml:space="preserve">
    <value>Licence request</value>
  </data>
  <data name="FormLicenceRequest_buttonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FormLicenceRequest_buttonSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="FormLicenceRequest_groupBoxCustomerInfo" xml:space="preserve">
    <value>Customer info</value>
  </data>
  <data name="FormLicenceRequest_labelContactEmail" xml:space="preserve">
    <value>Contact email</value>
  </data>
  <data name="FormLicenceRequest_labelContactFirstName" xml:space="preserve">
    <value>Contact first name</value>
  </data>
  <data name="FormLicenceRequest_labelContactLastName" xml:space="preserve">
    <value>Contact last name</value>
  </data>
  <data name="FormLicenceRequest_labelContactPhone" xml:space="preserve">
    <value>Contact phone</value>
  </data>
  <data name="FormLicenceRequest_labelCustAddr" xml:space="preserve">
    <value>Customer address</value>
  </data>
  <data name="FormLicenceRequest_labelCustName" xml:space="preserve">
    <value>Customer name</value>
  </data>
  <data name="GeneralOptionsFormGeneralOptionsForm" xml:space="preserve">
    <value>Contal Nova Server : General options for server</value>
  </data>
  <data name="GeneralOptionsFormReenterIpAddress" xml:space="preserve">
    <value>Please, reenter the IP address</value>
  </data>
  <data name="GeneralOptionsFormReenterRemotingServerPort" xml:space="preserve">
    <value>Please, reenter remoting server port</value>
  </data>
  <data name="GeneralOptionsFormReenterUdpPortForCNMP" xml:space="preserve">
    <value>Please, reenter UDP port for CNMP loockup</value>
  </data>
  <data name="GeneralOptionsFormServerIpAddressIsNotValid" xml:space="preserve">
    <value>IP address is not valid</value>
  </data>
  <data name="GeneralOptionsFormTcpPortIsNotFree" xml:space="preserve">
    <value>TCP port is not free</value>
  </data>
  <data name="GeneralOptionsFormUdpPortIsNotFree" xml:space="preserve">
    <value>UDP port is not free</value>
  </data>
  <data name="GeneralOptionsForm_bClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="GeneralOptionsForm_bRefreshLicenceList" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="GeneralOptionsForm_bSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="GeneralOptionsForm_chbSaveAndSkipDB" xml:space="preserve">
    <value>Skip database reconfiguration</value>
  </data>
  <data name="GeneralOptionsFormServerNoRegistryWriteAccess" xml:space="preserve">
    <value>Unable to access registry !
    
Please verify, that you're running configuration mode as administrator</value>
  </data>
  <data name="GeneralOptionsFormUnconfiguredReallyContinue" xml:space="preserve">
    <value>General options are not yet configured !

Do you really want to close the dialog ?</value>
  </data>
  <data name="GeneralOptionsForm_bSet" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="GeneralOptionsForm_cbAESEnabled" xml:space="preserve">
    <value>AES Remoting</value>
  </data>
  <data name="GeneralOptionsForm_labelLicenceFilePath" xml:space="preserve">
    <value>Licence file</value>
  </data>
  <data name="GeneralOptionsForm_lAesEncryptionKey" xml:space="preserve">
    <value>Aes encryption key</value>
  </data>
  <data name="GeneralOptionsForm_lCnmpUdpPort" xml:space="preserve">
    <value>UDP port for CNMP loockup</value>
  </data>
  <data name="GeneralOptionsForm_lFriendlyName" xml:space="preserve">
    <value>Server firendly name</value>
  </data>
  <data name="GeneralOptionsForm_lRemotingIpAddress" xml:space="preserve">
    <value>Bind to specific IP address</value>
  </data>
  <data name="GeneralOptionsForm_lServerPort" xml:space="preserve">
    <value>Remoting server port</value>
  </data>
  <data name="GeneralRequestedType" xml:space="preserve">
    <value>Requested type is</value>
  </data>
  <data name="General_Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="InputText" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="LicenseFileNotInServerDir" xml:space="preserve">
    <value>Saved license file does not exist or is not in server directory</value>
  </data>
  <data name="LicenseFileWrongExtension" xml:space="preserve">
    <value>Saved lincense file has incorrect extension</value>
  </data>
  <data name="NCASPluginEnabled" xml:space="preserve">
    <value>Enable access plugin</value>
  </data>
  <data name="NoExpiration" xml:space="preserve">
    <value>No expiration</value>
  </data>
  <data name="NoSpecified" xml:space="preserve">
    <value>No specified</value>
  </data>
  <data name="OfflineImport" xml:space="preserve">
    <value>Enable import from CSV/TSV</value>
  </data>
  <data name="OutputText" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="QuestionCloseServer" xml:space="preserve">
    <value>Contal nova server is already running. Close the contal nova server?</value>
  </data>
  <data name="QuestionStopService" xml:space="preserve">
    <value>Contal nova server is already running. Stop service for the contal nova server?</value>
  </data>
  <data name="RequestSuccessfullyCreated" xml:space="preserve">
    <value>Request was successfully created</value>
  </data>
  <data name="MajorVersion" xml:space="preserve">
    <value>Server major version</value>
  </data>
  <data name="GeneralOptionsFormReallySkipDB" xml:space="preserve">
    <value>This options is intended mainly for licensing changes
    
Do you really want to skip the database reconfiguration ?</value>
  </data>
  <data name="IdManagement" xml:space="preserve">
    <value>ID management/Batch design</value>
  </data>
  <data name="ErrorNotValidConnectionString" xml:space="preserve">
    <value>Connection string to the database is not valid</value>
  </data>
  <data name="AccessControlLists" xml:space="preserve">
    <value>Access Control List</value>
  </data>
  <data name="CardReaders" xml:space="preserve">
    <value>Card Readers</value>
  </data>
  <data name="SelectStructuredSubSiteForm_RootNode" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="Cards" xml:space="preserve">
    <value>Cards</value>
  </data>
  <data name="ColumnBD" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="ColumnCardFullNumber" xml:space="preserve">
    <value>Full number</value>
  </data>
  <data name="ColumnCardHolder" xml:space="preserve">
    <value>Holder</value>
  </data>
  <data name="ColumnDateFrom" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="ColumnDateTo" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="ColumnDepartment" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="ColumnDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ColumnEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ColumnEmploymentBeginningDate" xml:space="preserve">
    <value>Employment Beginning Date</value>
  </data>
  <data name="ColumnEmploymentEndDate" xml:space="preserve">
    <value>Employment End Date</value>
  </data>
  <data name="ColumnPerson" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="ColumnPersonID" xml:space="preserve">
    <value>Personal ID</value>
  </data>
  <data name="ColumnState" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="ColumnTelephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="ColumnCardNumber" xml:space="preserve">
    <value>Card number</value>
  </data>
  <data name="ColumnAccessDenied" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="ColumnCardReader" xml:space="preserve">
    <value>Card Reader</value>
  </data>
  <data name="ColumnEventlogDateTimeFirst" xml:space="preserve">
    <value>Date of 1st event</value>
  </data>
  <data name="ColumnEventlogDateTimeLast" xml:space="preserve">
    <value>Date of last event</value>
  </data>
  <data name="ColumnDateTimeCreated" xml:space="preserve">
    <value>Door Ajar Alarm Created</value>
  </data>
  <data name="ColumnDuration" xml:space="preserve">
    <value>Alarm duration (sec)</value>
  </data>
  <data name="ColumnName" xml:space="preserve">
    <value>DCU name</value>
  </data>
  <data name="ColumnParent" xml:space="preserve">
    <value>CCU name</value>
  </data>
</root>