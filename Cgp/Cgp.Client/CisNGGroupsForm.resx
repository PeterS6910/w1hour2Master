<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAP///wBpaWkAbGxsAGtrawBXV1cAZmZmAG5ubgBwcHAAYmJiAFFR
        UQBAQEAAX19fAFBQUABzc3MAd3d3AHl5eQB4eHgAcnJyAFlZWQBCQkIAdHR0AExMTAA+Pj4AWFhYAGBg
        YABtbW0AXV1dADo6OgBOTk4ASEhIAEFBQQB1dXUAiYmJAJCQkACSkpIAgYGBAIODgwCEhIQAfHx8AERE
        RAA3NzcASUlJAHp6egCMjIwAlpaWAJycnACUlJQApqamAJmZmQBDQ0MADw8PAFVVVQAtLS0AHx8fADAw
        MAAvLy8AMjIyADg5OQA9PT0AMzMzAC4uLgArKysAICAgACEhIQAeHh4AJSUlACYmJgAqKioAMDAvAC0u
        MAAuLy8AKSoqABgYGAAcHBwAGxsbAB0dHQAjIyMANTU1AEBAQQBfVkwAVlVUACcnJwA5OTkAQkJDAEwA
        AAAmAAAATwAAACcAAAA3AAAAKAAAABQAAAApAAAA+///ACoAAAD0//8AKwAAAPr//wAsAAAAAQAAAC0A
        AAADAAAALgAAAAEAAAAAAAAA1AEAAJ8AAAAhAAAAAgAAACIAAAACAAAAIwAAAPz//wAkAAAA9f//ACUA
        AAD3//8AJgAAAAoAAAAnAAAALAAAACgAAABKAAAAKQAAAFEAAAAqAAAAPAAAACsAAAAZAAAALAAAAP3/
        /wAtAAAA9P//AC4AAAD5//8ALwAAAAMAAAAuAAAAAQAAAK6YgwBkVEUAMSceABQRDQAIBgQAcAIAAJ8A
        AAAkAAAAAgAAACUAAAACAAAAJgAAAP3//wAnAAAA9v//ACgAAAD1//8AKQAAAAYAAAAqAAAAJwAAACsA
        AABHAAAALAAAAFEAAAAtAAAAQAAAAC4AAAAeAAAALwAAAPT//wAuAAAA+P//AC0AAAD///8ALAAAAAMA
        AAArAAAAAQAAAP///wD///8A////AP/4WAAAAAAADAMAAJ8AAAAnAAAAAgAAACgAAAACAAAAKQAAAP7/
        /wAqAAAA9///ACsAAAD1//8ALAAAAAMAAAAtAAAAIgAAAC4AAABDAAAALwAAABsAAAAvAAAAQwAAAC4A
        AAAiAAAALQAAAAMAAAAsAAAA9f//ACsAAAD3//8AKgAAAP7//wApAAAAAgAAACgAAAACAAAAief/AP//
        /wD///8A////AFxcYQBcXGEARAwAAP///wD///8A////AP/4WAAASPYA///+AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP/4WAAASPUA////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP/4WAAASPUA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFJCPjlTVAAAAAAAAABJSkpLTE1ETk9QUURKTEsAQEE/P0JDRD1FRkc9SEM2ADM0
        FzU2Nzg5OjscPD0+PwApDQkqKwcsLS4lLy8wMTIADB0eHxAgISIjECQlJicoAAAVExYXChgZAggaBhsK
        HAAAAAIMDQwEDg8QERIGExQAAAAAAgMEBQYHCAMJCgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP//AADgfwAAAAEAAAAB
        AAAAAQAAAAEAAAABAACAAQAAwAEAAOADAAD//wAA//8AAP//AAD//wAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHBwAFBQUARsbGwIkJCQDHx8fAygoKAMvLy8DNjY2Az8/
        PwNgWVACXVxbAi8vMAIWFhYCICAgAiYmJgEAAAAAICAgABgYGAAZGRkAICAgACAgIAAmJiYALi4uADc3
        NwBCQkMAal9RAGBfXQAzMzQAGhoaACcnJwAkJCQAGRkZACQkJAgREREgICAgOCcnJ1slJSV3KysraTIy
        MmI5OTlbQkJDVGBYT01bWllFOTo7PyoqKjgxMTEwMjIyJgAAAAAYGBhXHBwc6RwcHP8bGxv/HR0d/yMj
        I/8qKir/NTU1/0BAQf9fVkz/VlVU/yoqKv8cHBz/HR0d/xsbG/cYGBgpISEhXh4eHu8gICD+ICAg/CUl
        JfomJib7Kioq+y4uLvswMC/7LS4w/C4vL/wuLi79KSoq/CYmJv4fHx/6Dw8PMQ8PD1xVVVXvPj4++i0t
        LfgfHx/+MDAw/i8vL/4yMjL/ODk5/z09Pf86Ojr+MzMz/y4uLv4rKyv+ICAg+goKCi83NzdYUFBQ8WJi
        YuZJSUndenp6/25ubv2MjIz/lpaW9pycnPmDg4PjlJSU/pSUlO2mpqbwmZmZ+kNDQ+ICAgI4X19fY05O
        Tv1ISEj+QUFB/nl5ef91dXX+iYmJ/5CQkO2SkpL2eXl5/oGBgf6Dg4P+hISE/Xx8fP5ERET5AQEBMG9v
        byp0dHR8WVlZ/0xMTP8+Pj78UVFR/VhYWPxgYGD/aWlp/XBwcPttbW37ZmZm+11dXftRUVH8Ojo6+AsL
        CzBwcHAAZ2dnAGlpaZhfX1/bUFBQ/19fX/9ra2v/c3Nz/3d3d/95eXn/eHh4/3Jycv9mZmb/WVlZ/0JC
        Qv8pKSkwiIiIAXp6egRvb28AaWlpfWxsbN5ra2vJV1dXvWZmZqlubm6acHBwj2xsbH9iYmJxUVFRZEBA
        QFg8PDxJSUlJCAAAAAAMDAwAbW1tAlZWVge6uroHNDQ0AKioqABXV1cAZGRkAGdnZwBmZmYAXl5eAFJS
        UgA/Pz8APDw8AEJCQgAAAAAAAAAAAHJycgBdXV0AgYGBAAAAAAAAAAAA////AVlZWQJnZ2cDZ2dnA1tb
        WwNOTk4DPT09Ajw8PAJHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP//AADgfwAAAAEAAAABAAAAAQAAAAEAAAAB
        AACAAQAAwAEAAOADAAD//wAA//8AAP//AAD//wAA
</value>
  </data>
</root>