<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>