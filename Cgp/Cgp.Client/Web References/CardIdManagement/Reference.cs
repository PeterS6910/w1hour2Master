//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Contal.Cgp.Client.CardIdManagement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IDProductionBinding", Namespace="http://www.vps.de/wsdl/IDProductionService/")]
    public partial class IDProductionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ImagePreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageCaptureOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardComposerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardDesignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodingConfiguratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfigurationManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardPreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SystemStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IDProductionService() {
            this.Url = global::Contal.Cgp.Client.Properties.Settings.Default.Contal_Nova_Client_CardIdManagement_IDProductionService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ImagePreviewCompletedEventHandler ImagePreviewCompleted;
        
        /// <remarks/>
        public event ImageCaptureCompletedEventHandler ImageCaptureCompleted;
        
        /// <remarks/>
        public event CardComposerCompletedEventHandler CardComposerCompleted;
        
        /// <remarks/>
        public event CardDesignerCompletedEventHandler CardDesignerCompleted;
        
        /// <remarks/>
        public event EncodingConfiguratorCompletedEventHandler EncodingConfiguratorCompleted;
        
        /// <remarks/>
        public event ConfigurationManagerCompletedEventHandler ConfigurationManagerCompleted;
        
        /// <remarks/>
        public event CardsCompletedEventHandler CardsCompleted;
        
        /// <remarks/>
        public event CardJobCompletedEventHandler CardJobCompleted;
        
        /// <remarks/>
        public event CardPreviewCompletedEventHandler CardPreviewCompleted;
        
        /// <remarks/>
        public event FieldsCompletedEventHandler FieldsCompleted;
        
        /// <remarks/>
        public event SystemStatusCompletedEventHandler SystemStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int ImagePreview(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("ImagePreview", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ImagePreviewAsync(string RequestData) {
            this.ImagePreviewAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void ImagePreviewAsync(string RequestData, object userState) {
            if ((this.ImagePreviewOperationCompleted == null)) {
                this.ImagePreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImagePreviewOperationCompleted);
            }
            this.InvokeAsync("ImagePreview", new object[] {
                        RequestData}, this.ImagePreviewOperationCompleted, userState);
        }
        
        private void OnImagePreviewOperationCompleted(object arg) {
            if ((this.ImagePreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImagePreviewCompleted(this, new ImagePreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int ImageCapture(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("ImageCapture", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ImageCaptureAsync(string RequestData) {
            this.ImageCaptureAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void ImageCaptureAsync(string RequestData, object userState) {
            if ((this.ImageCaptureOperationCompleted == null)) {
                this.ImageCaptureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageCaptureOperationCompleted);
            }
            this.InvokeAsync("ImageCapture", new object[] {
                        RequestData}, this.ImageCaptureOperationCompleted, userState);
        }
        
        private void OnImageCaptureOperationCompleted(object arg) {
            if ((this.ImageCaptureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageCaptureCompleted(this, new ImageCaptureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int CardComposer(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("CardComposer", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CardComposerAsync(string RequestData) {
            this.CardComposerAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void CardComposerAsync(string RequestData, object userState) {
            if ((this.CardComposerOperationCompleted == null)) {
                this.CardComposerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardComposerOperationCompleted);
            }
            this.InvokeAsync("CardComposer", new object[] {
                        RequestData}, this.CardComposerOperationCompleted, userState);
        }
        
        private void OnCardComposerOperationCompleted(object arg) {
            if ((this.CardComposerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardComposerCompleted(this, new CardComposerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int CardDesigner(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("CardDesigner", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CardDesignerAsync(string RequestData) {
            this.CardDesignerAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void CardDesignerAsync(string RequestData, object userState) {
            if ((this.CardDesignerOperationCompleted == null)) {
                this.CardDesignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardDesignerOperationCompleted);
            }
            this.InvokeAsync("CardDesigner", new object[] {
                        RequestData}, this.CardDesignerOperationCompleted, userState);
        }
        
        private void OnCardDesignerOperationCompleted(object arg) {
            if ((this.CardDesignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardDesignerCompleted(this, new CardDesignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int EncodingConfigurator(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("EncodingConfigurator", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EncodingConfiguratorAsync(string RequestData) {
            this.EncodingConfiguratorAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void EncodingConfiguratorAsync(string RequestData, object userState) {
            if ((this.EncodingConfiguratorOperationCompleted == null)) {
                this.EncodingConfiguratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodingConfiguratorOperationCompleted);
            }
            this.InvokeAsync("EncodingConfigurator", new object[] {
                        RequestData}, this.EncodingConfiguratorOperationCompleted, userState);
        }
        
        private void OnEncodingConfiguratorOperationCompleted(object arg) {
            if ((this.EncodingConfiguratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodingConfiguratorCompleted(this, new EncodingConfiguratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int ConfigurationManager(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("ConfigurationManager", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConfigurationManagerAsync(string RequestData) {
            this.ConfigurationManagerAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void ConfigurationManagerAsync(string RequestData, object userState) {
            if ((this.ConfigurationManagerOperationCompleted == null)) {
                this.ConfigurationManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfigurationManagerOperationCompleted);
            }
            this.InvokeAsync("ConfigurationManager", new object[] {
                        RequestData}, this.ConfigurationManagerOperationCompleted, userState);
        }
        
        private void OnConfigurationManagerOperationCompleted(object arg) {
            if ((this.ConfigurationManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfigurationManagerCompleted(this, new ConfigurationManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int Cards(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("Cards", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CardsAsync(string RequestData) {
            this.CardsAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void CardsAsync(string RequestData, object userState) {
            if ((this.CardsOperationCompleted == null)) {
                this.CardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardsOperationCompleted);
            }
            this.InvokeAsync("Cards", new object[] {
                        RequestData}, this.CardsOperationCompleted, userState);
        }
        
        private void OnCardsOperationCompleted(object arg) {
            if ((this.CardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardsCompleted(this, new CardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int CardJob(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("CardJob", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CardJobAsync(string RequestData) {
            this.CardJobAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void CardJobAsync(string RequestData, object userState) {
            if ((this.CardJobOperationCompleted == null)) {
                this.CardJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardJobOperationCompleted);
            }
            this.InvokeAsync("CardJob", new object[] {
                        RequestData}, this.CardJobOperationCompleted, userState);
        }
        
        private void OnCardJobOperationCompleted(object arg) {
            if ((this.CardJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardJobCompleted(this, new CardJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int CardPreview(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("CardPreview", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CardPreviewAsync(string RequestData) {
            this.CardPreviewAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void CardPreviewAsync(string RequestData, object userState) {
            if ((this.CardPreviewOperationCompleted == null)) {
                this.CardPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardPreviewOperationCompleted);
            }
            this.InvokeAsync("CardPreview", new object[] {
                        RequestData}, this.CardPreviewOperationCompleted, userState);
        }
        
        private void OnCardPreviewOperationCompleted(object arg) {
            if ((this.CardPreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardPreviewCompleted(this, new CardPreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int Fields(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("Fields", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FieldsAsync(string RequestData) {
            this.FieldsAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void FieldsAsync(string RequestData, object userState) {
            if ((this.FieldsOperationCompleted == null)) {
                this.FieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFieldsOperationCompleted);
            }
            this.InvokeAsync("Fields", new object[] {
                        RequestData}, this.FieldsOperationCompleted, userState);
        }
        
        private void OnFieldsOperationCompleted(object arg) {
            if ((this.FieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FieldsCompleted(this, new FieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.vps.de/wsdl/IDProductionService/", ResponseNamespace="http://www.vps.de/wsdl/IDProductionService/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ResultId")]
        public int SystemStatus(string RequestData, out string ResultText, out string ResultData) {
            object[] results = this.Invoke("SystemStatus", new object[] {
                        RequestData});
            ResultText = ((string)(results[1]));
            ResultData = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SystemStatusAsync(string RequestData) {
            this.SystemStatusAsync(RequestData, null);
        }
        
        /// <remarks/>
        public void SystemStatusAsync(string RequestData, object userState) {
            if ((this.SystemStatusOperationCompleted == null)) {
                this.SystemStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystemStatusOperationCompleted);
            }
            this.InvokeAsync("SystemStatus", new object[] {
                        RequestData}, this.SystemStatusOperationCompleted, userState);
        }
        
        private void OnSystemStatusOperationCompleted(object arg) {
            if ((this.SystemStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SystemStatusCompleted(this, new SystemStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ImagePreviewCompletedEventHandler(object sender, ImagePreviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImagePreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImagePreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ImageCaptureCompletedEventHandler(object sender, ImageCaptureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageCaptureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImageCaptureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CardComposerCompletedEventHandler(object sender, CardComposerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardComposerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardComposerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CardDesignerCompletedEventHandler(object sender, CardDesignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardDesignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardDesignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void EncodingConfiguratorCompletedEventHandler(object sender, EncodingConfiguratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodingConfiguratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodingConfiguratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ConfigurationManagerCompletedEventHandler(object sender, ConfigurationManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfigurationManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfigurationManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CardsCompletedEventHandler(object sender, CardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CardJobCompletedEventHandler(object sender, CardJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CardPreviewCompletedEventHandler(object sender, CardPreviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FieldsCompletedEventHandler(object sender, FieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SystemStatusCompletedEventHandler(object sender, SystemStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SystemStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SystemStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ResultText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ResultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591