<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAP///wDZllUA5Ld9AOW8fwDlt3gA3JxcAN+udwDhw5oA4syrAODM
        rQDgyacA37+PAOCxdQDit4UA5dS6AOzo5AD6+fsA8/T4APf2+gDo5OIA3sywAOK4gADl07kA+Pj6APf4
        +gD49/cA8/LzAPXz9ADy8vQA7+72AN3NsgDdsHUA0YdGAOTInwDo498A9fT3APv5+gD49vgA5OLkAO/t
        7wDx7vEA7evvAODe4ADfw5UAzo1MAOK3fwDl0bEA8fH0AOTi4wDb2twA5OPkAMrHyQD06fQA4+HjAOzm
        6wD17voA6M60ANqhZQDkvYAA49K1AOjn7ADv6+4Aw8DDAFRaVQBpnWkA2dLYAL3OwACs1LkAr86nAKez
        gQDj19wAXZJlAN6xcwDkz68A7uzxAOzo6wDr6OsA8urxAJWclQAAfAAAXZdfADyiTQAlvkwALMVYACuq
        SABmmmwADIIMAAAxAAC+eDcA48eYAOHc3ADj4OQA6eboAPLs8gDY2tgAIpAiAAqVEAAepC0AKq4/ACuu
        QAAipjIADZoVABSNFAANRA0A06VqAOTVuwDp5+8A6efqAOLg4QDo7egA9Pn0APD18ADv9O4A7/TvAPf1
        9ADs8OwAcnRyANmyfADr3sYA5+XnAPb2/ADb298A9fL1APz6/AD29PYA9fP1APbz9QD/7fcAeXd5AMye
        ZQDly6AA8uLFAODVwADv7+0A8/TzAPDw8ADx8fEA++30APPz8wB5eHgAXzQJAKN4RACrhlgA7OroAPX1
        9gDw8fEA8fDwAPjn7wDv7+8AbGxsAO7u7gD19fUA8vLyAOPb3wDBwcEA5+fnAO3t7QDr6+sA7OzsAMPF
        xABjY2MAbm5uAGtrawBtbW0AggAAAIQAAACGAAAAhwAAAIkAAACNAAAAmQAAAKkAAACtAAAArgAAALAA
        AACyAAAAuAAAALoAAAC9AAAAwAAAAMIAAADDAAAAxAAAAMUAAADHAAAAzAAAAM0AAADOAAAA0AAAANEA
        AADSAAAA0wAAANQAAADYAAAA2gAAANsAAADeAAAA3wAAAOYAAADpAAAA6gAAAAsBAAARAQAAFQEAABYB
        AAAmAAAASAAAAE0AAABQAAAAVAAAAFUAAABYAAAAYQAAAGIAAABpAAAAagAAAG0AAABuAAAAdgAAAHkA
        AAB6AAAAfQAAAH8AAACAAAAAgQAAAIMAAACKAAAAjwAAAJAAAACRAAAAkgAAAJMAAACXAAAAmwAAAKEA
        AACiAAAApQAAAKYAAACoAAAArAAAAK8AAACzAAAAtQAAALYAAAC3AAAAvAAAAL4AAADLAAAAzwAAAA4B
        AAASAQAAEwEAAEsAAABTAAAAVgAAAAAAAAAAAAChopaWo6QAAAAAAAAAAAAAnJ2enp+doAAAAAAAAAAA
        AJeYiIiJmZqbAAAAAACNjo+QkYiJkpOUlZYAAACCg4SFhoeIiYmIiouMAAB2d3h5ent8fX5+f4AmgQBp
        amtsKW1ub3BxcnJzdHVZWltcXV5fYGFiY2RlZmdoSUpLTE1OT1BRUlNUVVZXWDs8PT4nP0BBQkNERUZH
        SAAuLzAxMjM0NTY3ODk6AAAAISIjJCUmJygpKissLQAAAAAHFxgZGhscHR4fIAAAAAAAAA4PEBESExQV
        FgAAAAAAAAAABwgJCgsMDQAAAAAAAAAAAAACAwQFBgAAAAAAAAD+BwAA/gMAAP4BAADwAAAA4AAAAMAA
        AACAAAAAAAAAAAAAAAAAAQAAAAcAAAAHAACADwAAwB8AAOA/AADwfwAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5+fkCOzs7ASYmJhBjY2N2bm5uf2xs
        bH1sbGx9a2tre21tbYMlIyQ3cXFxAIyMjAUAAAAAAAAAAIlNGgAAAAAA/fz8AKSjowBnaGgW5+fn8+3t
        7f/r6+v/6+vr/+zs7P/t7e3/w8XE6XJyckXFxcUAnVETAAAABgC6ZSAGAAAACtXa4AtmaXASNzc6MO7u
        7vD19fX+8PDw/PDw8P3x8fH98vLy++Pb3//BwcHyoaGhOwAAAAA8FAACXy0IAEATADNfNAmco3hE0quG
        WOTs6uj89fX2/vDw8P3x8fH+8PHx/vHw8P345+/77+/v/2xsbG2gVhoFuoJOAKNfKUfMnmXd5cug//Li
        xf/g1cD/7+/t/vP08/7w8PD+8fHx/vHx8f7w8PD9++30/fPz8/15eHhlwIdVAL6ET0TZsnz6697G/+fl
        5/r29vz829vf/PXy9f78+vz+9vT2/vXz9f718/X+9vP1/f/t9/349vj/eXd5ZsSVcyLTpWrb5NW7/+nn
        7/rp5+r+8e7x/uLg4f7o7ej+9Pn0/vD18P7v9O7+7/Tv/u/07/739fT97PDs/3J0cma+eDfJ48eY/uHc
        3P3j4OT+6ebo/vLs8v7Y2tj+IpAi/gqVEP4epC3+Kq4//iuuQP4ipjL9DZoV+xSNFPsNRA1l3rFz+eTP
        r/3u7PH+7Ojr/uvo6/7y6vH+lZyV/gB8AP5dl1/+PKJN/iW+TP4sxVj+K6pI/2aabP8Mggz/ADEAbeS9
        gPvj0rX+6Ofs/u/r7v7k4uT+w8DD/lRaVf5pnWn+2dLY/r3OwP6s1Ln9r86n/qezgfXj19zhXZJlm3WB
        dTHit3/45dGx/fHx9P7k4uP+29rc/uTj5P7Kx8n+9On0/uPh4/7s5uv+9e76+ujOtP3aoWWu6NigBPnc
        wgAAAAAA0YdGtuTIn/3o49/99fT3/vv5+v749vj+5OLk/u/t7/7x7vH+7evv/uDe4Pnfw5X/zo1Ma9un
        bADUnGAE////AeOwlRHfrnfL5dO5//j4+vj3+Pr++Pf3/vPy8/718/T+8vL0/u/u9vrdzbL+3bB15duj
        ZxHKg0QByIBBAOPf4wDXl1gA26FrMOK3he3l1Lr/7Ojk/fr5+/7z9Pj+9/b6/ujk4v3ezLD/4riA+tSQ
        UkXan2EA049QAcuISgAAAAAAzH86BNidZwDQhEMx3653xuHDmvjizKv84Myt/uDJp/3fv4/64LF11NKJ
        SUbOhEQAzoJBAunFkwDLh0gAAAAAAMp9NQC1QwAE0o5RALAvAAHZllW05Ld98eW8f/vlt3j03JxcxrtE
        ABfOh0YA3KFnBcx8OwAAAAAAAAAAAAAAAAD+BwAA/gMAAP4BAADwAAAA4AAAAMAAAACAAAAAAAAAAAAA
        AAAAAQAAAAcAAAAHAACADwAAwB8AAOA/AADwfwAA
</value>
  </data>
</root>