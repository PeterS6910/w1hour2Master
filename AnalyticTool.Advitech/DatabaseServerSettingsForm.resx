<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_bObtainDatabases.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAArpAAAK6QH9dc7TAAAEsklE
        QVRYR8XVS1BTZxQH8C8JkiiooNhE5TEKIkISIFSr1taxFTu0XVUXbjpCpbXGiFZQiyCPKg9BIMhDAlKZ
        OkXUCsSU0RJeGoIQQrChPsvQRTtjO85024WOp+djSHvBQ0w2uvjNzf2f8537JTe5YQDwWpHhq0SGnlA0
        /KYLqBkPomreIEN3mO62JKRx4mpg7TgEVj2Mpnq8QYazidHf9wurHzf76+8BK3bC8sq7cqrPG2RIkVf8
        ogire2j3K3UCOzECogIHLK26bwiufZATWvtgx+LTzkhq3cuQ4UxhFc7w5VV3J2SFdmC5g8DyhybNK3KA
        /6lRCCi9A0sqxp4r9GNDQSWjydSM2ZChUNzZu6rgSudj37zbwLIswI5b/5fVP400fxAWlThAUXZnYF7m
        LY8+ETJ0Cci1zF9caHvik40XPtIL7Os+944i7PPLG4ClpY4nilyLmporRIYui7JvzhWnm0dZuhlYRpfn
        DnWC9FgfKIqG/lyW1ef2i0qGQoqMG4skB68PswPXgR30QloHyI52gzy/30jNdSHDmYK07X4+OlM305lg
        mn3XQKS79kyy3/SHWGd6JNGZfhfpTE8xwzrSGsHvSCcEHe3cRM3lyJBy/IRR4ru37SLbcxXYl60gQvP3
        Gz+VattCthZ0ynhPUkGXVLavPdhfZ3wTe9Mke1otkn3tEHD4xqyfAhm6I0m9XMd2XwJx6mVYlW4MoXqE
        pJ9f3huYcf1ZaH7vG1T9hcATvinNRZJd34Nc+0MMP29y+Lv9T5ClNNfIdre8S9VeCLjzjhXSptH1h6ma
        y4LkC9sWJF9ZyF9/69DcOe9YVzKzRygq+Tsxlb8QcOfsC8WGYeVEo2NzGlWfqXpwqdNgj4NzI5vOUHV3
        yJArH5Dn1djioXEkqckwvPGd3C42j+oTpzFRxcDysXKrHGpsGqi3b7mw/TwTUb0UMuTKrZHBpyzBT/W3
        1VBr2wx1w4mPzw5vtRnsSa0G+4d19faPGg32D3owf3TaGv68pD8ETlmWQeWgBs7atvz0TQ+b/GW8DBm6
        FN6KqDx5MxS4IssqKOlXQqk1Dk5bE1A8nquh2LIaCm+tQCsnnbwZgjUNVA8lDpRZ1YHUXCEydCnuf9sv
        vy9yAgGX1xuBwgUiMF81WRPK7V2JG9aAfjDx5yLL+iXUbBcyFMruio7JNEf9fcwcBcfMaxA/vswayDRH
        QnaXEnK6Yz+m5rqQ4UwZHSrloY7oe1/9GA149AjvTe+Iac7u3OBLzXQhQ8qBtvfn6tpVJ7Stqr/2tipB
        SNs2Hc90bepqas5MZOjO/qvvLfjiimZH6qXYys9aYnuTL6ps6B8E3K5mFaS0qAqptRQy9NaOBvXI9gYV
        fIJ2NsV79PByIUNOwhgnQmIkQT5oDvKdIsWWOUicqFf/mqhXwbYy9S6+li/FOsfX8hnkNbhpJ1PNASgM
        rUZKFIcS0Dr0FtowZaMYjyLG1iZkRPVE7QzLwetEYMb7OL6Gr+Uz+Cw+k8+e9pSkNrAQhaJIFINiER+2
        FvENrEf/bYLDC8cj1VTGe3gvX8PX8hl8Fp/JZ8++ASFsnO0WCG/DJGydg++cv3bVea/3t+B1IMNXB9i/
        C777FEqH+jgAAAAASUVORK5CYII=
</value>
  </data>
</root>