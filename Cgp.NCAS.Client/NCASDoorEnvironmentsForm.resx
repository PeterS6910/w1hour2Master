<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAP///wAHEykACRQoAAMJFQAABAwAAAAEABQyZwAXP4cAFTt8ABc7
        dgAUMWMAECpXAA4mUAAMIkgADiZPABQ0agAaSp0AHEyeACBQnwAfSpQAHUiTABdElQAUM2oAEClVAAgV
        KwAQLFwAGEaVABtJlQAfUJwAHUuVABxJlAAaS58AFjhwAA8mTwAEDyIADiVLABdDkgAZRJEAIVCZACBM
        lAAZRY8AGEeZABQ0aAANJEsADxYjAB8eHwANIEAAGUWSABhHlwAgT5wAIUuSABtEjgAXRJgAFDJoABYa
        GwAsLCcAIiIjAAoZNAAYRI4AG0qaAB5OnAAeSZQAHUiSABdHnAARMWwADiNEABIVNAAuLj8AIyMfAAgI
        CwAGEB8AFj+GABlGkwAfT5kAH02XABpHkgAeTZ4AGzpsAAwhRAASFyUALzA8ACQkKQANDQkABAkRABg+
        ggAYRZcAHk2ZACRQlQAPO4oASWqkAI6OjgABGD8ACwwLABEQDgAfHyAAAAACABY7ewAbS5wAIUyVABE9
        jACNnbgAlJGLAAEXQQAREhMACwsLABcXFwATNXAAGEWWAB5NlwAgT5gAE0KTAEhpoACMiYQAAhlFAAYJ
        CwAJCAgAERISABU0awAYRpkAHUuXACNQlwAaRY4AHEqaACxEawALH0QAEC1dABpKnAAdT6AAIE2YAB1G
        jQAXRZoADC1mAA4hQwAFECMADilaABlCgwAgUJsAHUuYABpLoAAUNGsADSJGAAECBQAPI0IAFTZtABhG
        lgAUNWsACRo1AAYRKAAOIkcA////AP///wAnEAIAEBkgADQ/RwD8//8A////AP///wD///8A////AP/x
        2gD/wd4A////AP///wAlDwEAEBgfADM+RwDw//8A////AP///wD///8A////AP/65QD/vOEA////AP//
        /wAkDgEADxcfADI9RwDl//8A////AP///wD///8A////AP/gxQD/tcwA////AP///gAhDQEADxYdADA7
        RwDa//8A////AP///wD///8A////AP/bxAD/qH8A4vb/AP//+wAcCgAADhUdAC86RgDJ//8A////AP//
        /wD///8A////AP/YzgD/o1wAcIScAN7ynQAYBwAADRUcAC45RQC1//8A////AP///wD///8A////AP/X
        zQD/nE8AUU9OAFVXMgAPBAAADRQbAC04QwCj//8A////AP///wD///8A////AP/XzQD/mEYAPzo3AC8m
        HgAIAgAADBMaACw2QgCV//8A////AP///wD///8A////AP/XzgD/k0MANi0mABwVDwAEAQAADBIZACo0
        QACB//8A////AP///wD///8A////AAAAAAAAAAAAlJUAAAAAAAAAAAAAAI6PkJGSkwAAAAAAAAAAhoeI
        iYqLjI0AAAAAAAAAAH5/gIGCg4SFAAAAAAAAAAB2d3h5ent8fQAAAAAAAAAAa2xtbm9wcXJzdHUAAAAA
        YGFiPWNkZWZnaGlqAAAAAFRVVldYWVpbXF1eXwAAAABHSElKS0xNTk9QUVJTAAAAOjs8PT4/QEFCQ0RF
        RgAAAC8wMTIzNDU2Djc4OQAAAAAkJSYnKCkqKywtLgAAAAAAGhscHR4fICEiIwAAAAAAABAREhMUFRYX
        GBkAAAAAAAAHCAkKCwwNDg8AAAAAAAAAAgMEBQYAAAAAAAAAAAD/PwAA+B8AAOAfAADgHwAA4B8AAOAD
        AADAAwAAwAMAAMABAADAAQAAwAMAAMAHAADADwAAwA8AAMAfAADA/wAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAADwEDBx8DChUyAAECOAAAADcAAABHBhEonw4i
        R8YAAABAAAADKAAAABUAAAAGAAAAAAAAAAAAAAAFAAAADAAAAB0AAAArAAAAPwECBWsPI0KrFTZt5RhG
        lv8UNWvyCRo1xQABAjgAAAEaAAAACQAAAAAAAAAAAAAACAADBhUAAQInBRAjbQ4pWsQZQoP3IFCb/x1L
        mP8aS6D+FDRr7w0iRt4AAgVHAAAAHQAAAAsAAAABAAAAAAAAAAwCBxAbAAAAMRAtXdMaSpz/HU+g/CBN
        mPwdRo38F0Wa/gwtZu4OIUPcAQMHTQQDAyAEBAQNAAAAAQAAAAAAAAAPAgULHwAAAEAVNGvfGEaZ/B1L
        l/wjUJf+GkWO/RxKmv8sRGvwCx9E4AIECU8TEhEaAAAAAwAAAABRVFMAAAABEgACBSAAAABNEzVw7BhF
        lv8eTZf9IE+Y/hNCk/5IaaD/jImE7gIZReEGCQtcCQgIURESElsdHh4RFBUVAAABBRYAAAAhAAACXRY7
        e/gbS5z+Hk6c/SFMlf8RPYz+jZ24/5SRi/MBF0HiERITyQsLC/YXFxf/JCUkQjM0NAADBxAaAAAAIgQJ
        EW0YPoL/GEWX/h5Nmf4kUJX/DzuK/klqpP+Ojo7yARg/4wsMC+4REA7/Hx8g/hcXF08iIyMAAwkVHQAA
        ACQGEB9/Fj+G/hlGk/wfT5n+H02X/xpHkv4eTZ7/Gzps7AwhRN8SFyXkLzA8/SQkKf0NDQlUEhIKAAQL
        GCAAAAAlChk0khhEjv4bSpr8Hk6c/R5JlP8dSJL+F0ec/xExbOwOI0TgEhU05C4uP/4jIx//CAgLXQoK
        CwAGDx8jAAAAKA0gQKYZRZL/GEeX+yBPnP4hS5L/G0SO/RdEmP8UMmjrDCJI3xYaG+AsLCf/IiIj7w4O
        DkkQEBEABg8gJQAAAC0OJUu5F0OS/xlEkfwhUJn/IEyU/xlFj/4YR5n/FDRo6g0kS+YPFiOJHx4fWg0N
        Di4AAAAGAAAAAAYRIyQAAAAwECxcyhhGlf4bSZX7H1Cc/h1Llf4cSZT8Gkuf/RY4cOQPJk/mBA8iZCMi
        IRIAAAAJSUZLAS4tMQAHEyYeAAAALhQ0atkaSp3/HEye/iBQn/8fSpT/HUiT/xdElf8UM2rrEClV8AgV
        K2gxMTAVAQIEDQAAAAEAAAAABQsVDwAAAC8UMmflFz+H+hU7fPUXO3b1FDFj8RAqV+oOJlDiDCJI0w4m
        T8wGDRpFAAAADQACBAgAAAAAAAAAAAAAAAwAAAAfBxMppAkUKLgDCRWaAAQMgwAABG0AAABXAAAAQgAA
        AC8AAAAYAAAAEgAAAA4CBQoEAAAAAAAAAAD/PwAA+B8AAOAfAADgHwAA4B8AAOADAADAAwAAwAMAAMAB
        AADAAQAAwAMAAMAHAADADwAAwA8AAMAfAADA/wAA
</value>
  </data>
</root>